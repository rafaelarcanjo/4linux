---
- hosts: all
  become: yes
  become_user: root
  become_method: sudo
  gather_facts: true
  tasks:
    - name: Instala pacotes base
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - git
        - apt-transport-https
        - software-properties-common
        - gnupg2        

    - name: Adiciona key do repositÃ³rio
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: Adiciona repositorio oficial do Docker
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/debian stretch stable
        state: present
        
    - name: Instala Docker
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - docker-ce
        - docker-compose
  
    - name: Adiciona o usuario vagrant no grupo docker
      user:
        name: vagrant
        group: docker

    - name: CLIENT | Copia os arquivos para /opt
      shell: |
        cp -arv /vagrant/provision/monitoring /opt/monitoring
      when: ansible_facts.hostname == 'client'

    - name: CLIENT | Executa o Docker Compose
      shell: |
        cd /opt/app-devops/ && docker-compose up -d 
        cd /opt/monitoring/ && docker-compose up -d
      when: ansible_facts.hostname == 'client'

    - name: SERVER | Copia os arquivos para /opt
      shell: |
        cp -arv /vagrant/provision/grafana /opt
      when: ansible_facts.hostname == 'server'

    - name: SERVER | Executa o Docker Compose
      shell: |
        cd /opt/grafana/ && docker-compose up -d        
      when: ansible_facts.hostname == 'server'

    - name: Adicionando o Prometheus 
      grafana_datasource:
        name: DS_PROMETHEUS
        grafana_url: http://localhost:3000
        grafana_user: admin
        grafana_password: oheehel4eiCaBuphouToovue9aisachi
        ds_type: prometheus
        url: http://192.168.63.254:9090/
      when: ansible_facts.hostname == 'server'

    - name: Baixando os dashboards
      uri:
        url: "{{ item.url }}"
        dest: "/tmp/{{ item.dashboard }}"
      loop:
        - { url: 'https://grafana.com/api/dashboards/193/revisions/1/download', dashboard: '193.json' }
      when: ansible_facts.hostname == 'server'

    - name: Corringindo os datasources       
      replace:
        path: "/tmp/{{ item.dashboard }}"
        regexp: "{{ item.regexp }}"
        replace: "{{ item.datasource }}"
      loop:
        - { dashboard: '193.json', regexp: '"(?:\${)?DS_[A-Z0-9_-]+(?:})?"', datasource: '"DS_PROMETHEUS"'}
      when: ansible_facts.hostname == 'server'

    - name: Import grafana dashboards through API
      uri:
        url: "http://localhost:3000/api/dashboards/db"
        user: "admin"
        password: "oheehel4eiCaBuphouToovue9aisachi"
        force_basic_auth: true
        method: POST
        body_format: json
        body: >
          {
            "dashboard": {{ lookup("file", item) }},
            "overwrite": true,
            "message": "Updated by ansible"
          }
      # no_log: true
      with_fileglob:
        - "/tmp/*.json"
      when: ansible_facts.hostname == 'server'